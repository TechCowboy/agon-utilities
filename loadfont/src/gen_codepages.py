# Generate code page tables in C.

print(""" /* Code pages, generated by gen_codepages.py */


""")

codepage_list=['cp1250','cp1251','cp1252','cp1253','cp1254','cp1257',
               'iso8859_1', 'iso8859_2','iso8859_3','iso8859_4','iso8859_5','iso8859_7','iso8859_9','iso8859_10','iso8859_13','iso8859_14','iso8859_15','iso8859_16','koi8_r','koi8_u','cp437','macroman']

codepage_aliases=[['iso8859_1','latin1'], 
                  ['iso8859_2','latin2'],
                  ['iso8859_3','latin3'],
                  ['iso8859_4','latin4'],
                  ['iso8859_9','latin5'],
                  ['iso8859_10','latin6'],
                  ['iso8859_13','latin7'], 
                  ['iso8859_14','latin8'], 
                  ['iso8859_15','latin9'], 
                  ['iso8859_16','latin10']]

for cp in codepage_list:
    print('static const uint16_t codepage_%s[] = {'%cp,end='')
    for c in range(256):
        if c%8==0:
            print('\n    ',end='')
        if c<32:
            if cp=='cp437':
                # Special case; fill in glyphs below 32 for CP437, used by loadfont only.
                w=[0x0000, 0x263a, 0x263b, 0x2665, 0x2666, 0x2663, 0x2660, 0x2022,
                   0x25d8, 0x25cb, 0x25d9, 0x2642, 0x2640, 0x266a, 0x266b, 0x263c,
                   0x25ba, 0x25c4, 0x2195, 0x203c, 0x00b6, 0x00a7, 0x25ac, 0x21a8,
                   0x2191, 0x2193, 0x2192, 0x2190, 0x221f, 0x2194, 0x25b2, 0x25bc,][c]
            else:
                w=c
        else:
            try:
                w=ord(bytes([c]).decode(cp))
            except:
                w=0
            if cp=='cp437' and c==127:
                w=0x2302 # and also for CP437 ccode point 127
        print('0x%04x, '%w,end='')
    print('\n};\n')


c_codepage_list=''

def add_codepage(n1,n2):
    return '  {"%s",codepage_%s},\n' %(n2.replace('_','-'),n1)

for cp in codepage_list:
    c_codepage_list+=add_codepage(cp,cp)
for cp in codepage_aliases:
    c_codepage_list+=add_codepage(cp[0],cp[1])
            
print("""
const struct {
  const char * name;
  const uint16_t * cp;
} codetable[] = {
%s};

#define N_CODEPAGES (sizeof(codetable)/sizeof(codetable[0]))
""" %c_codepage_list)
